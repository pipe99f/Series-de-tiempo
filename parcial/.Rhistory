library(dplyr)
library(forecast)
library(tseries)
library(TSA)
library(ggplot2)
library(readxl)
setwd("Y:/My Drive/Series/Trabajos/parcial")
####
## PUNTO 1
####
serie1 <- read_excel("P1.xlsx")
adver <- ts(serie1$Xt, start = c(1984, 1), frequency = 12)
plot(adver)
plot(adver, main = "Serie Gastos en publicidad", xlab = "Año")
plot(adver, main = "Serie gastos en publicidad", xlab = "Año", ylab = "Gasto")
plot(adver_ln, main = "Log de la Serie", xlab = "Año")
# Transformación de la serie (Estabilización de la varianza)
adver_ln <- log(adver)
plot(adver_ln, main = "Log de la Serie", xlab = "Año")
ggplot(adver)
ggplot(adver, aes())
####
## PUNTO 1
####
serie1 <- read_excel("P1.xlsx")
adver <- ts(serie1$Xt, start = c(1984, 1), frequency = 12)
plot(adver, main = "Serie gastos en publicidad", xlab = "Año", ylab = "Gasto")
# Transformación de la serie (Estabilización de la varianza)
adver_ln <- log(adver)
plot(adver_ln, main = "Log de la Serie", xlab = "Año")
adf.test(adver_ln)
# Se obtiene estacionariedad
adver_dif <- diff(adver_ln, 1)
plot(adver_dif, main = "Diff de la serie")
adf.test(adver_dif)
# Identificación del modelo
acf(adver_dif)
pacf(adver_dif)
eacf(adver_dif) # Posible modelo ARMA(2, 4)
auto.arima(adver_dif, trace = T) # Posible modelo ARMA(2, 1)
adver_mod1 <- Arima(adver_dif, order = c(2, 0, 4), include.mean = F)
summary(adver_mod1)
adver_mod2 <- Arima(adver_dif, order = c(2, 0, 1), include.mean = F)
summary(adver_mod2)  # Mejor modelo por criterio de AICc y BIC
# Diagnostico del modelo
checkresiduals(adver_mod2)
cpgram(mod2_res, main = "Cumulative periodogram") # Periodograma
auto.arima(adver_dif, trace = T) # Posible modelo ARMA(2, 1)
adver_mod1 <- Arima(adver_dif, order = c(2, 0, 4), include.mean = F)
summary(adver_mod1)
adver_mod2 <- Arima(adver_dif, order = c(2, 0, 1), include.mean = F)
summary(adver_mod2)  # Mejor modelo por criterio de AICc y BIC
# Diagnostico del modelo
checkresiduals(adver_mod2)
mod2_res <- adver_mod2$residuals
ks.test(mod2_res, "pnorm", mean(mod2_res), sd(mod2_res)) #Kolmogorov-Smirnov test
cpgram(mod2_res, main = "Cumulative periodogram") # Periodograma
# Diagnostico del modelo
checkresiduals(adver_mod2)
cpgram(mod2_res, main = "Periodograma acumulativo") # Periodograma
?checkresiduals
acf(mod2_res)
checkresiduals(adver_mod2)
?checkresiduals
checkresiduals(adver_mod2, plot.type = "spectrum")
checkresiduals(adver_mod2, main = "Residuos del modelo")
checkresiduals(adver_mod2, main = "Residuos del modelo")
checkresiduals(adver_mod2, main = "Residuos del modelo")
?cpgram
plot(adver, xlab = "Año", ylab = "Gasto")
cpgram(mod2_res, main = "") # Periodograma
?adf.test
# Identificación del modelo
acf(adver_dif)
pacf(adver_dif)
eacf(adver_dif) # Posible modelo ARMA(2, 4)
# Identificación del modelo
acf(adver_dif)
pacf(adver_dif)
eacf(adver_dif) # Posible modelo ARMA(2, 4)
# Identificación del modelo
acf(adver_dif)
pacf(adver_dif)
# Identificación del modelo
acf(adver_dif, main = "")
# Identificación del modelo
acf(adver_dif)
pacf(adver_dif)
pacf(adver_dif)
# Identificación del modelo
acf(adver_dif)
# Identificación del modelo
acf(adver_dif)
pacf(adver_dif)
eacf(adver_dif) # Posible modelo ARMA(2, 4)
?acf
?pacf
?pacf
auto.arima(adver_dif, trace = T) # Posible modelo ARMA(2, 1)
adver_mod1 <- Arima(adver_dif, order = c(2, 0, 4), include.mean = F)
summary(adver_mod1)
adver_mod2 <- Arima(adver_dif, order = c(2, 0, 1), include.mean = F)
summary(adver_mod2)  # Mejor modelo por criterio de AICc y BIC
mod2 <- Arima(ytd, order=c(2,0,1),include.mean = F)
mod2
adver_mod2 <- Arima(adver_dif, order = c(2, 0, 1), include.mean = F)
adver_mod2
summary(adver_mod2)  # Mejor modelo por criterio de AICc y BIC
# Diagnostico del modelo
checkresiduals(adver_mod2)
?cpgram
library(hwwntest)
install.packages(hwwntest)
install.packages("hwwntest")
library(hwwntest)
bartlettB.test(mod2_res)
bartlettB.test(mod2_res, plot.it = T)
bartlettB.test(mod2_res)
ks.test(mod2_res, "pnorm", mean(mod2_res), sd(mod2_res)) #Kolmogorov-Smirnov test
bartlettB.test(mod2_res)
?arima.sim
####
## PUNTO 4
####
y_sim < arima.sim(list(order = c(1,0,0)), n = 1000)
####
## PUNTO 4
####
y_sim <- arima.sim(list(order = c(1,0,0)), n = 1000)
####
## PUNTO 4
####
y_sim <- arima.sim(list(order = c(1,0,0), ar = 0.7), n = 1000)
x_t <- arima.sim(list(order = c(1,0,0), ar = 0.7), n = 1000)
y_t <- x_t
?kfilter0
?coru
?correlation
?cor
?ts.intersect
acf_mod <- acf(y_t, lag.max = 2, plot = F)$acf
phi <- acf_mod[3] / acf_mod[2]
phi
acf_mod[2]
acf_mod[3]
acf_mod[4]
acf_mod[1]
acf(y_t, lag.max = 2)
acf(y_t, lag.max = 12)
acf(y_t, lag.max = 0)
acf(y_t, lag.max = 1)
acf(y_t, lag.max = 2)$acf
acf(y_t, lag.max = 3)$acf
acf(y_t, lag.max = 1)
acf(y_t, lag.max = 2)$acf
phi <- acf_mod[2] / acf_mod[1]
KalmanLike(y_t)
?KalmanLike
KalmanLike(y_t)
ymode <- makeARIMA(phi, theta = 0, Delta = sigma_w)
sigma_w <- (1 - phi**2)*var(y_t)/phi
ymode <- makeARIMA(phi, theta = 0, Delta = sigma_w)
ymode
ymode$Delta
